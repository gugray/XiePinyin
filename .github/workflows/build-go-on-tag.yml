name: Build and publish

on:
  push:
    # branches: [ master ]
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: 14

    - name: Install Node dependencies
      working-directory: ./xiep/web
      run: yarn install --frozen-lockfile

    - name: Run Gulp
      working-directory: ./xiep/web
      run: gulp

    - name: Execute JS tests
      working-directory: ./xiep/web
      run: gulp test

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.1

    - name: Build
      working-directory: ./xiep
      run: go build -o deploy/

    - name: Test
      working-directory: ./xiep
      run: go test ./...

    - name: Write version from REF to file
      working-directory: ./xiep/deploy
      run: 'echo "${GITHUB_REF/refs\/tags\//}" >version.txt' 

    - name: ZIP output folder
      run: zip -r xiep-deploy.zip ./xiep/deploy

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload_release_asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: xiep-deploy.zip
        asset_name: xiep-deploy.zip
        asset_content_type: application/zip 

    - name: Invoke deployment hook
      uses: distributhor/workflow-webhook@v1
      env:
        webhook_url: ${{ secrets.WEBHOOK_URL }}
        webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
        webhook_auth: ${{ secrets.WEBHOOK_AUTH }}
        data: '{ "artifact_url": "${{ steps.upload_release_asset.outputs.browser_download_url }}", "secret": "${{ secrets.WEBHOOK_SECRET }}"  }'
       
